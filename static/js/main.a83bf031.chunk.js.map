{"version":3,"sources":["../node_modules/h8k-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","Components/ResidentsList.js","studentsList.js","Components/Search.js","Components/Error.js","App.js","registerServiceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","ResidentsList","students","className","data-testid","student","i","key","name","STUDENTS","validityDate","Search","setErrorMsg","setVerifiedStudents","verifiedStudents","studentList_","useState","studentName","joiningDate","studentDetails","setStudentDetails","verifyStudent","find","student_","toLocaleLowerCase","handleChange","target","value","onSubmit","preventDefault","length","studentObj","undefined","now","Date","today","getFullYear","getMonth","getDate","split","year","month","day","yyyy","mm","dd","maxValid","selected","checkValidity","alert","htmlFor","onChange","type","errorMsg","App","header","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.a83bf031.chunk.js","sourcesContent":["var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t23,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 18;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\r\n\r\nfunction ResidentsList({ students }) {\r\n  return (\r\n    <div className=\"pa-10 mt-10 w-75\">\r\n      <div className=\"font-weight-bold text-center\">Residents List</div>\r\n      <ul className=\"mt-10 styled w-50 mx-auto\" data-testid=\"residentsNameList\">\r\n        {students?.map((student, i) => (\r\n          <li key={i} className=\"slide-up-fade-in\">\r\n            {student.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResidentsList;\r\n","export const STUDENTS = [\r\n    {\r\n        name: 'John',\r\n        validityDate: '2030-12-30'\r\n    },\r\n    {\r\n        name: 'Jane',\r\n        validityDate: '2030-05-25'\r\n    },\r\n    {\r\n        name: 'Adam',\r\n        validityDate: '2030-11-11'\r\n    },\r\n    {\r\n        name: 'Bonnie',\r\n        validityDate: '2008-11-11'\r\n    },\r\n    {\r\n        name: 'Dhilip',\r\n        validityDate: '2030-12-30'\r\n    },\r\n    {\r\n        name: 'Falude',\r\n        validityDate: '2020-05-25'\r\n    },\r\n    {\r\n        name: 'Damiyen',\r\n        validityDate: '2030-11-11'\r\n    },\r\n    {\r\n        name: 'Talisk',\r\n        validityDate: '2023-11-11'\r\n    }\r\n];","import React, { useState } from \"react\";\r\nimport { STUDENTS } from \"../studentsList\";\r\n\r\nfunction Search({ setErrorMsg, setVerifiedStudents, verifiedStudents }) {\r\n  const studentList_ = STUDENTS;\r\n  const [studentDetails, setStudentDetails] = useState({\r\n    studentName: \"\",\r\n    joiningDate: \"\",\r\n  });\r\n\r\n  const verifyStudent = studentList_.find(\r\n    (student_) =>\r\n      student_.name.toLocaleLowerCase() ===\r\n      studentDetails.studentName.toLocaleLowerCase()\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !studentDetails.studentName.length ||\r\n      !studentDetails.joiningDate.length\r\n    ) {\r\n      alert(\"Student Name or Joining Date cannot be empty!\");\r\n      return;\r\n    }\r\n    checkValidity(studentDetails.joiningDate, \"\");\r\n  };\r\n\r\n  function checkValidity(joiningDate, validityDate) {\r\n    let studentObj = \"\";\r\n\r\n    if (verifyStudent === undefined) {\r\n      setStudentDetails({\r\n        studentName: \"\",\r\n        joiningDate: \"\",\r\n      });\r\n      setErrorMsg(\r\n        `Sorry, ${studentDetails.studentName} is not a verified student!`\r\n      );\r\n      return;\r\n    } else {\r\n      studentObj = verifyStudent;\r\n    }\r\n\r\n    validityDate = verifyStudent.validityDate;\r\n\r\n    const now = new Date();\r\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n    const [year, month, day] = joiningDate.split(\"-\");\r\n    const [yyyy, mm, dd] = validityDate.split(\"-\");\r\n    const maxValid = new Date(yyyy, mm - 1, dd);\r\n    const selected = new Date(year, month - 1, day);\r\n\r\n    if (!(maxValid >= selected && maxValid >= today)) {\r\n      setStudentDetails({\r\n        studentName: \"\",\r\n        joiningDate: \"\",\r\n      });\r\n      setErrorMsg(`Sorry, ${studentObj.name}'s validity has Expired!`);\r\n      return;\r\n    } else {\r\n      setStudentDetails({\r\n        studentName: \"\",\r\n        joiningDate: \"\",\r\n      });\r\n      setErrorMsg(\"\");\r\n      setVerifiedStudents([...verifiedStudents, studentObj]);\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setStudentDetails({ ...studentDetails, [e.target.id]: e.target.value });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"my-50 layout-row align-items-end justify-content-end\">\r\n        <label htmlFor=\"studentName\">\r\n          Student Name:\r\n          <div>\r\n            <input\r\n              id=\"studentName\"\r\n              onChange={handleChange}\r\n              data-testid=\"studentName\"\r\n              type=\"text\"\r\n              className=\"mr-30 mt-10\"\r\n              value={studentDetails.studentName}\r\n            />\r\n          </div>\r\n        </label>\r\n        <label htmlFor=\"joiningDate\">\r\n          Joining Date:\r\n          <div>\r\n            <input\r\n              id=\"joiningDate\"\r\n              onChange={handleChange}\r\n              data-testid=\"joiningDate\"\r\n              type=\"date\"\r\n              className=\"mr-30 mt-10\"\r\n              value={studentDetails.joiningDate}\r\n            />\r\n          </div>\r\n        </label>\r\n        <button type=\"submit\"\r\n         data-testid=\"addBtn\" className=\"small mb-0\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nfunction Error({errorMsg}) {\r\n\treturn <div data-testid=\"errorMsg\" className=\"alert error mt-20 slide-up-fade-in\">{errorMsg}</div>\r\n}\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport ResidentsList from \"./Components/ResidentsList\";\r\nimport Search from \"./Components/Search\";\r\nimport Error from \"./Components/Error\";\r\nimport \"h8k-components\";\r\n\r\nconst title = \"Tizeti\";\r\nfunction App() {\r\n  const [errorMsg, setErrorMsg] = useState(false);\r\n  const [verifiedStudents, setVerifiedStudents] = useState([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h8k-navbar header={title}></h8k-navbar>\r\n      <div className=\"layout-column justify-content-center align-items-center w-50 mx-auto\">\r\n        <Search\r\n          setErrorMsg={setErrorMsg}\r\n          setVerifiedStudents={setVerifiedStudents}\r\n          verifiedStudents={verifiedStudents}\r\n          \r\n        />\r\n\r\n        {errorMsg.length ? <Error errorMsg={errorMsg} /> : <></>}\r\n\r\n        <ResidentsList students={verifiedStudents} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport {applyPolyfills, defineCustomElements} from 'h8k-components/loader';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\napplyPolyfills()\r\n    .then(() => {\r\n        return defineCustomElements(window);\r\n    })\r\n"],"sourceRoot":""}